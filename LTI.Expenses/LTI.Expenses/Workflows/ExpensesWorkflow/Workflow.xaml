<Activity mc:Ignorable="sap sap2010 sads" x:Class="LTI.Expenses.ExpensesWorkflow.Workflow" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap2010:WorkflowViewState.IdRef="LTI.Expenses.ExpensesWorkflow.Workflow_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:msdad="clr-namespace:Microsoft.SharePoint.DesignTime.Activities.Design;assembly=Microsoft.SharePoint.DesignTime.Activities.Design"
 xmlns:mwha="clr-namespace:Microsoft.Web.Hosting.Administration;assembly=Microsoft.SharePoint"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:p1="wf://workflow.windows.net/$Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Text</x:String>
      <x:String>Microsoft.Activities</x:String>
      <x:String>Microsoft.SharePoint.WorkflowActions</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>Microsoft.Web.Hosting.Administration</x:String>
      <x:String>System.Security.Principal</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.WorkflowActions</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Workflow.Activities</AssemblyReference>
      <AssemblyReference>System.Workflow.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Workflow.Runtime</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client.ServerRuntime</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>LTI.Expenses</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sco:Collection(x:String)" Name="CollectionVar" />
      <Variable x:TypeArguments="p:DynamicValue" Name="listItemProperties" />
      <Variable x:TypeArguments="x:Int32" Name="ApprovingManager" />
      <Variable x:TypeArguments="x:String" Name="EmailVar" />
      <Variable x:TypeArguments="x:String" Name="variable1" />
      <Variable x:TypeArguments="mwha:Users" Name="name" />
      <Variable x:TypeArguments="x:String" Name="variable2" />
      <Variable x:TypeArguments="x:Int32" Name="taskresult" />
      <Variable x:TypeArguments="x:String" Name="variable3" />
      <Variable x:TypeArguments="p:DynamicValue" Name="bill" />
      <Variable x:TypeArguments="p:DynamicValue" Name="dv_1" />
      <Variable x:TypeArguments="x:String" Name="Url" />
      <Variable x:TypeArguments="p:DynamicValue" Name="dv_0" />
      <Variable x:TypeArguments="x:String" Name="LoginName" />
    </Sequence.Variables>
    <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" sap2010:WorkflowViewState.IdRef="LookupSPListItem_1">
      <p1:LookupSPListItem.ItemId>
        <InArgument x:TypeArguments="x:Int32">
          <p:ExpressionContainerValue x:TypeArguments="x:Int32">
            <p1:GetCurrentItemId />
          </p:ExpressionContainerValue>
        </InArgument>
      </p1:LookupSPListItem.ItemId>
      <p1:LookupSPListItem.ListId>
        <InArgument x:TypeArguments="s:Guid">
          <p:ExpressionContainerValue x:TypeArguments="s:Guid">
            <p1:GetCurrentListId />
          </p:ExpressionContainerValue>
        </InArgument>
      </p1:LookupSPListItem.ListId>
      <p1:LookupSPListItem.Result>
        <OutArgument x:TypeArguments="p:DynamicValue">
          <mca:CSharpReference x:TypeArguments="p:DynamicValue">listItemProperties</mca:CSharpReference>
        </OutArgument>
      </p1:LookupSPListItem.Result>
    </p1:LookupSPListItem>
    <p:GetODataProperties DisplayName="GetDynamicValueProperties" sap2010:WorkflowViewState.IdRef="GetODataProperties_1">
      <p:GetODataProperties.Source>
        <InArgument x:TypeArguments="p:DynamicValue">
          <mca:CSharpValue x:TypeArguments="p:DynamicValue">listItemProperties</mca:CSharpValue>
        </InArgument>
      </p:GetODataProperties.Source>
      <scg:Dictionary x:TypeArguments="x:String, OutArgument">
        <OutArgument x:TypeArguments="x:Int32" x:Key="ApprovingManagerId">
          <mca:CSharpReference x:TypeArguments="x:Int32">ApprovingManager</mca:CSharpReference>
        </OutArgument>
      </scg:Dictionary>
    </p:GetODataProperties>
    <p:BuildCollection x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="BuildCollection`1_1">
      <p:BuildCollection.Result>
        <OutArgument x:TypeArguments="sco:Collection(x:String)">
          <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">CollectionVar</mca:CSharpReference>
        </OutArgument>
      </p:BuildCollection.Result>
      <p:BuildCollection.Values>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">ApprovingManager.ToString()</mca:CSharpValue>
        </InArgument>
      </p:BuildCollection.Values>
    </p:BuildCollection>
    <p1:Email AdditionalHeaders="{x:Null}" BCC="{x:Null}" CC="{x:Null}" Body="Hai" sap2010:WorkflowViewState.IdRef="Email_1" Subject="HelloWorld">
      <p1:Email.To>
        <InArgument x:TypeArguments="sco:Collection(x:String)">
          <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">CollectionVar</mca:CSharpValue>
        </InArgument>
      </p1:Email.To>
    </p1:Email>
    <Delay sap2010:WorkflowViewState.IdRef="Delay_1">
      <InArgument x:TypeArguments="x:TimeSpan">
        <mca:CSharpValue x:TypeArguments="x:TimeSpan">TimeSpan.FromSeconds(10)</mca:CSharpValue>
      </InArgument>
    </Delay>
    <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" sap2010:WorkflowViewState.IdRef="LookupSPListItem_2">
      <p1:LookupSPListItem.ItemId>
        <InArgument x:TypeArguments="x:Int32">
          <p:ExpressionContainerValue x:TypeArguments="x:Int32">
            <p1:GetCurrentItemId />
          </p:ExpressionContainerValue>
        </InArgument>
      </p1:LookupSPListItem.ItemId>
      <p1:LookupSPListItem.ListId>
        <InArgument x:TypeArguments="s:Guid">
          <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Expenses;}")</mca:CSharpValue>
        </InArgument>
      </p1:LookupSPListItem.ListId>
      <p1:LookupSPListItem.Result>
        <OutArgument x:TypeArguments="p:DynamicValue">
          <mca:CSharpReference x:TypeArguments="p:DynamicValue">bill</mca:CSharpReference>
        </OutArgument>
      </p1:LookupSPListItem.Result>
    </p1:LookupSPListItem>
    <p:GetODataProperties DisplayName="GetDynamicValueProperties" sap2010:WorkflowViewState.IdRef="GetODataProperties_2">
      <p:GetODataProperties.Source>
        <InArgument x:TypeArguments="p:DynamicValue">
          <mca:CSharpValue x:TypeArguments="p:DynamicValue">bill</mca:CSharpValue>
        </InArgument>
      </p:GetODataProperties.Source>
      <scg:Dictionary x:TypeArguments="x:String, OutArgument">
        <OutArgument x:TypeArguments="x:String" x:Key="BillScan/Url">
          <mca:CSharpReference x:TypeArguments="x:String">Url</mca:CSharpReference>
        </OutArgument>
      </scg:Dictionary>
    </p:GetODataProperties>
    <If sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">Url!=null</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
          <p1:SingleTask DueDate="{x:Null}" TaskId="{x:Null}" AssignmentEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have a new task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" AssignmentEmailSubject="Task Assigned" Body="Task workflow" CancelationEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;One of your tasks was canceled and deleted. You do not need to take any further action on that task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" CancelationEmailSubject="Task Canceled" CompletedStatus="Completed" ContentTypeId="0x0108003365C4474CAE8C42BCE396314E88E51F" DefaultTaskOutcome="0" sap2010:WorkflowViewState.IdRef="SingleTask_1" OutcomeFieldName="TaskOutcome" OverdueEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have an &lt;/span&gt;&lt;span style='font-size:13.5pt;color:#ff3b3b;'&gt;overdue&lt;/span&gt;&lt;span style='font-size:13.5pt'&gt; task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" OverdueEmailSubject="Task Overdue" OverdueReminderRepeat="1" OverdueRepeatTimes="1" SendReminderEmail="True" Title="Workflow task" WaitForTaskCompletion="True">
            <p1:SingleTask.AssignedTo>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">ApprovingManager.ToString()</mca:CSharpValue>
              </InArgument>
            </p1:SingleTask.AssignedTo>
            <p1:SingleTask.Outcome>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32">taskresult</mca:CSharpReference>
              </OutArgument>
            </p1:SingleTask.Outcome>
            <p1:SingleTask.RelatedContentLinkListId>
              <InArgument x:TypeArguments="s:Guid">
                <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                  <p1:GetCurrentListId />
                </p:ExpressionContainerValue>
              </InArgument>
            </p1:SingleTask.RelatedContentLinkListId>
            <p1:SingleTask.RelatedContentLinkListItemId>
              <InArgument x:TypeArguments="s:Guid">
                <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                  <p1:GetCurrentItemGuid />
                </p:ExpressionContainerValue>
              </InArgument>
            </p1:SingleTask.RelatedContentLinkListItemId>
            <p1:SingleTask.RelatedContentLinkListItemIntegerId>
              <InArgument x:TypeArguments="x:Int32">
                <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                  <p1:GetCurrentItemId />
                </p:ExpressionContainerValue>
              </InArgument>
            </p1:SingleTask.RelatedContentLinkListItemIntegerId>
            <p1:SingleTask.TaskItemId>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32">ApprovingManager</mca:CSharpReference>
              </OutArgument>
            </p1:SingleTask.TaskItemId>
          </p1:SingleTask>
          <p1:WriteToHistory sap2010:WorkflowViewState.IdRef="WriteToHistory_1">
            <p1:WriteToHistory.Message>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">"Outcome :" +taskresult</mca:CSharpValue>
              </InArgument>
            </p1:WriteToHistory.Message>
          </p1:WriteToHistory>
          <p1:Email AdditionalHeaders="{x:Null}" BCC="{x:Null}" CC="{x:Null}" Body="Approved" sap2010:WorkflowViewState.IdRef="Email_2" Subject="Result">
            <p1:Email.To>
              <InArgument x:TypeArguments="sco:Collection(x:String)">
                <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">CollectionVar</mca:CSharpValue>
              </InArgument>
            </p1:Email.To>
          </p1:Email>
          <p:Suspend sap2010:WorkflowViewState.IdRef="Suspend_1" Reason="Success" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
          <p1:Email AdditionalHeaders="{x:Null}" BCC="{x:Null}" CC="{x:Null}" Body="Rejected" sap2010:WorkflowViewState.IdRef="Email_3" Subject="Result">
            <p1:Email.To>
              <InArgument x:TypeArguments="sco:Collection(x:String)">
                <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">CollectionVar</mca:CSharpValue>
              </InArgument>
            </p1:Email.To>
          </p1:Email>
          <p1:WriteToHistory sap2010:WorkflowViewState.IdRef="WriteToHistory_2">
            <p1:WriteToHistory.Message>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">"Outcome :" + taskresult</mca:CSharpValue>
              </InArgument>
            </p1:WriteToHistory.Message>
          </p1:WriteToHistory>
          <p:Suspend sap2010:WorkflowViewState.IdRef="Suspend_2" Reason="Stopped" />
        </Sequence>
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>d1pEOlxFeHBlbnNlc0xpc3RzXHNvdXJjZVxMVEkuRXhwZW5zZXNcTFRJLkV4cGVuc2VzXFdvcmtmbG93c1xFeHBlbnNlc1dvcmtmbG93XFdvcmtmbG93LnhhbWxJNgPzAQ4CAQFHBVsbAwG8AlwFZxwDAZ0CaAVzGQMB/gF0BXoQAwHsAXsFfw0DAdwBgAEFkgEbAwG8AZMBBZ4BHAMBnQGfAQXxAQoCAQJRC1MoAwHNAlgLWGkDAb4CSgtMKAMBvQJfC19hAwGtAmQLZGADAZ4CcAtwZAMBjgJrC2tuAwH/AXcLd2YDAe8BdE50UwMB7gF0hgF0kgEDAe0BfQl9YQMB3QGKAQuKAXUDAc0BjwELjwFbAwG+AYMBC4UBKAMBvQGbAQubAVQDAa0BlgELlgFTAwGeAaIBC6IBUwIBA6YBCdwBFAIBN98BCe8BFAIBElINUiQEAc0CAUsNSyQEAb0CAYQBDYQBJAQBvQEBpwELzAEbAgFczQEL0wEfAgFM1AEL2gEWAgE62wEL2wFVAgE44AEL5gEWAgEl5wEL7QEfAgEV7gEL7gFVAgETpwFTpwGwAgMBnAGnAYQHpwGRBwMBmwGnAckKpwHMCgMBmgGnAYIDpwGvBQMBmQG0ARG2AS4DAZgBpwHABqcBwwYDAZcBpwHdAqcB7AIDAZYBrwERrwFgAwGHAacB6AWnAfMFAwGGAacB3wqnAeUKAwGFAbsBEb0BLgMBhAGnAY0KpwGbCgMBgwHCARHEAS4DAYIBpwHsCqcB+woDAYEBpwGjB6cB+AkDAYABpwGCBqcBrAYCAX+qARGqAWoCAXDJARHJAWYCAWGnAZILpwGYCwIBYKcByAKnAdcCAgFfpwHIBacB1wUCAV6nAbIKpwG1CgIBXdABEdABZgIBTdcBEdcBbAIBPdQBVNQBXgIBPNQBkQHUAZkBAgE72wFJ2wFSAgE54wER4wFsAgEo4AFU4AFeAgEn4AGRAeABmQECASbqARHqAWcCARbuAUnuAVICARS1ARO1ASoEAZgBAbwBE7wBLAQBhAEBwwETwwEqBAGCAQE=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LookupSPListItem_1" sap:VirtualizedContainerService.HintSize="469,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ItemId" DisplayName="(current item)" Value="$CurrentItemId" />
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="(current list)" Value="$CurrentListId" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetODataProperties_1" sap:VirtualizedContainerService.HintSize="469,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">Lists/Trips</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildCollection`1_1" sap:VirtualizedContainerService.HintSize="469,22" />
      <sap2010:ViewStateData Id="Email_1" sap:VirtualizedContainerService.HintSize="469,68" />
      <sap2010:ViewStateData Id="Delay_1" sap:VirtualizedContainerService.HintSize="469,22" />
      <sap2010:ViewStateData Id="LookupSPListItem_2" sap:VirtualizedContainerService.HintSize="469,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="Expenses" Value="Lists/Expenses" />
              <msdad:ViewStateNameValue x:Key="ItemId" DisplayName="(current item)" Value="$CurrentItemId" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetODataProperties_2" sap:VirtualizedContainerService.HintSize="469,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">Lists/Expenses</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SingleTask_1" sap:VirtualizedContainerService.HintSize="200,89" />
      <sap2010:ViewStateData Id="WriteToHistory_1" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="Email_2" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="Suspend_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="222,491">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Email_3" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="WriteToHistory_2" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="Suspend_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="222,362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="469,641" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="491,1519">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LTI.Expenses.ExpensesWorkflow.Workflow_1" sap:VirtualizedContainerService.HintSize="531,1599" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>